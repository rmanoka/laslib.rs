/* automatically generated by rust-bindgen */

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[allow(unused_imports)]
    use self::super::root;
    extern "C" {
        pub fn LASvlr_lastiling_field_level(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASvlr_lastiling_field_level_index(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASvlr_lastiling_field_min_x(self_: *mut ::std::os::raw::c_void) -> *mut f32;
    }
    extern "C" {
        pub fn LASvlr_lastiling_field_max_x(self_: *mut ::std::os::raw::c_void) -> *mut f32;
    }
    extern "C" {
        pub fn LASvlr_lastiling_field_min_y(self_: *mut ::std::os::raw::c_void) -> *mut f32;
    }
    extern "C" {
        pub fn LASvlr_lastiling_field_max_y(self_: *mut ::std::os::raw::c_void) -> *mut f32;
    }
    extern "C" {
        pub fn LASvlr_lastiling_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_number_of_point_records(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_number_of_points_by_return(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_max_x(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_min_x(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_max_y(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_min_y(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_max_z(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_min_z(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_field_position(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASvlr_lasoriginal_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASitem_field_type(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASitem_field_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASitem_field_version(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASitem_get_name(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASzip_check_compressor(
            self_: *mut ::std::os::raw::c_void,
            compressor: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_check_coder(
            self_: *mut ::std::os::raw::c_void,
            coder: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_check_item(
            self_: *mut ::std::os::raw::c_void,
            item: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_check_items(
            self_: *mut ::std::os::raw::c_void,
            num_items: ::std::os::raw::c_ushort,
            items: *const ::std::os::raw::c_void,
            point_size: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_check(
            self_: *mut ::std::os::raw::c_void,
            point_size: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_setup(
            self_: *mut ::std::os::raw::c_void,
            num_items: *mut ::std::os::raw::c_void,
            items: *mut ::std::os::raw::c_void,
            point_type: ::std::os::raw::c_uchar,
            point_size: ::std::os::raw::c_ushort,
            compressor: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_is_standard(
            self_: *mut ::std::os::raw::c_void,
            num_items: ::std::os::raw::c_ushort,
            items: *const ::std::os::raw::c_void,
            point_type: *mut ::std::os::raw::c_void,
            record_length: *mut ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_is_standard_1(
            self_: *mut ::std::os::raw::c_void,
            point_type: *mut ::std::os::raw::c_void,
            record_length: *mut ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_field_bytes(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASzip_unpack(
            self_: *mut ::std::os::raw::c_void,
            bytes: *const ::std::os::raw::c_void,
            num: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_request_compatibility_mode(
            self_: *mut ::std::os::raw::c_void,
            requested_compatibility_mode: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_setup_1(
            self_: *mut ::std::os::raw::c_void,
            point_type: ::std::os::raw::c_uchar,
            point_size: ::std::os::raw::c_ushort,
            compressor: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_setup_2(
            self_: *mut ::std::os::raw::c_void,
            num_items: ::std::os::raw::c_ushort,
            items: *const ::std::os::raw::c_void,
            compressor: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_set_chunk_size(
            self_: *mut ::std::os::raw::c_void,
            chunk_size: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_request_version(
            self_: *mut ::std::os::raw::c_void,
            requested_version: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASzip_get_error(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASzip_field_compressor(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASzip_field_coder(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASzip_field_version_major(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASzip_field_version_minor(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASzip_field_version_revision(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASzip_field_options(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASzip_field_chunk_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASzip_field_number_of_special_evlrs(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASzip_field_offset_to_special_evlrs(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASzip_field_num_items(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASzip_field_items(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASzip_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASzip_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASquantizer_field_x_scale_factor(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_field_y_scale_factor(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_field_z_scale_factor(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_field_x_offset(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_field_y_offset(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_field_z_offset(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASquantizer_get_x(
            self_: *mut ::std::os::raw::c_void,
            X: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASquantizer_get_y(
            self_: *mut ::std::os::raw::c_void,
            Y: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASquantizer_get_z(
            self_: *mut ::std::os::raw::c_void,
            Z: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASquantizer_get_X(
            self_: *mut ::std::os::raw::c_void,
            x: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASquantizer_get_Y(
            self_: *mut ::std::os::raw::c_void,
            y: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASquantizer_get_Z(
            self_: *mut ::std::os::raw::c_void,
            z: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASquantizer_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_reserved(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_data_type(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASattribute_field_options(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASattribute_field_name(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_unused(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_no_data(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_min(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_max(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_scale(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_offset(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_field_description(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_create(size: ::std::os::raw::c_uchar) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_create_1(
            type_: ::std::os::raw::c_uint,
            name: *const ::std::os::raw::c_void,
            description: *const ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattribute_set_no_data(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_uchar,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_1(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_char,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_2(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_3(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_short,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_4(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_5(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_6(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_ulonglong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_7(
            self_: *mut ::std::os::raw::c_void,
            no_data: ::std::os::raw::c_longlong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_8(self_: *mut ::std::os::raw::c_void, no_data: f32)
            -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_no_data_9(self_: *mut ::std::os::raw::c_void, no_data: f64)
            -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min(
            self_: *mut ::std::os::raw::c_void,
            min: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASattribute_update_min(
            self_: *mut ::std::os::raw::c_void,
            min: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASattribute_set_min_1(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_uchar,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_2(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_char,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_3(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_4(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_short,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_5(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_6(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_7(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_ulonglong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_8(
            self_: *mut ::std::os::raw::c_void,
            min: ::std::os::raw::c_longlong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_9(self_: *mut ::std::os::raw::c_void, min: f32) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_min_10(self_: *mut ::std::os::raw::c_void, min: f64) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max(
            self_: *mut ::std::os::raw::c_void,
            max: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASattribute_update_max(
            self_: *mut ::std::os::raw::c_void,
            max: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASattribute_set_max_1(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_uchar,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_2(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_char,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_3(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_4(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_short,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_5(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_6(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_7(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_ulonglong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_8(
            self_: *mut ::std::os::raw::c_void,
            max: ::std::os::raw::c_longlong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_9(self_: *mut ::std::os::raw::c_void, max: f32) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_max_10(self_: *mut ::std::os::raw::c_void, max: f64) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_scale(self_: *mut ::std::os::raw::c_void, scale: f64) -> bool;
    }
    extern "C" {
        pub fn LASattribute_set_offset(self_: *mut ::std::os::raw::c_void, offset: f64) -> bool;
    }
    extern "C" {
        pub fn LASattribute_unset_scale(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_unset_offset(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_has_no_data(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_has_min(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_has_max(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_has_scale(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_has_offset(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASattribute_get_size(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASattribute_get_value_as_float(
            self_: *mut ::std::os::raw::c_void,
            pointer: *mut ::std::os::raw::c_void,
        ) -> f64;
    }
    extern "C" {
        pub fn LASattribute_set_value_as_float(
            self_: *mut ::std::os::raw::c_void,
            pointer: *mut ::std::os::raw::c_void,
            value: f64,
        );
    }
    extern "C" {
        pub fn LASattributer_field_attributes_linked(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut bool;
    }
    extern "C" {
        pub fn LASattributer_field_number_attributes(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASattributer_field_attributes(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattributer_field_attribute_starts(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattributer_field_attribute_sizes(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattributer_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattributer_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASattributer_clean_attributes(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASattributer_init_attributes(
            self_: *mut ::std::os::raw::c_void,
            number_attributes: ::std::os::raw::c_uint,
            attributes: *mut ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattributer_get_attributes_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_short;
    }
    extern "C" {
        pub fn LASattributer_get_attribute_index(
            self_: *mut ::std::os::raw::c_void,
            name: *const ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASattributer_get_attribute_start(
            self_: *mut ::std::os::raw::c_void,
            name: *const ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASattributer_get_attribute_start_1(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_int,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASattributer_get_attribute_size(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_int,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASattributer_get_attribute_name(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_int,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASattributer_remove_attribute(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASattributer_remove_attribute_1(
            self_: *mut ::std::os::raw::c_void,
            name: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASwavepacket_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwavepacket_zero(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASwavepacket_getIndex(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASwavepacket_getOffset(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_ulonglong;
    }
    extern "C" {
        pub fn LASwavepacket_getSize(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwavepacket_getLocation(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASwavepacket_getXt(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASwavepacket_getYt(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASwavepacket_getZt(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASwavepacket_setIndex(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASwavepacket_setOffset(
            self_: *mut ::std::os::raw::c_void,
            offset: ::std::os::raw::c_ulonglong,
        );
    }
    extern "C" {
        pub fn LASwavepacket_setSize(
            self_: *mut ::std::os::raw::c_void,
            size: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASwavepacket_setLocation(self_: *mut ::std::os::raw::c_void, location: f32);
    }
    extern "C" {
        pub fn LASwavepacket_setXt(self_: *mut ::std::os::raw::c_void, xt: f32);
    }
    extern "C" {
        pub fn LASwavepacket_setYt(self_: *mut ::std::os::raw::c_void, yt: f32);
    }
    extern "C" {
        pub fn LASwavepacket_setZt(self_: *mut ::std::os::raw::c_void, zt: f32);
    }
    extern "C" {
        pub fn LASwavepacket_flipDirection(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASpoint_field_X(self_: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_field_Y(self_: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_field_Z(self_: *mut ::std::os::raw::c_void) -> *mut ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_field_intensity(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_field_scan_angle_rank(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_char;
    }
    extern "C" {
        pub fn LASpoint_field_user_data(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_field_point_source_ID(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_field_extended_scan_angle(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_short;
    }
    extern "C" {
        pub fn LASpoint_field_extended_classification(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_field_deleted_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_field_dummy(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_gps_time_change(self_: *mut ::std::os::raw::c_void) -> *mut bool;
    }
    extern "C" {
        pub fn LASpoint_field_gps_time(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASpoint_field_rgb(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_wavepacket(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_extra_bytes(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_quantizer(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_coordinates(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_attributer(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_point(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_field_have_gps_time(self_: *mut ::std::os::raw::c_void) -> *mut bool;
    }
    extern "C" {
        pub fn LASpoint_field_have_rgb(self_: *mut ::std::os::raw::c_void) -> *mut bool;
    }
    extern "C" {
        pub fn LASpoint_field_have_nir(self_: *mut ::std::os::raw::c_void) -> *mut bool;
    }
    extern "C" {
        pub fn LASpoint_field_have_wavepacket(self_: *mut ::std::os::raw::c_void) -> *mut bool;
    }
    extern "C" {
        pub fn LASpoint_field_extra_bytes_number(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_field_total_point_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASpoint_field_num_items(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_field_items(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_copy_to(
            self_: *mut ::std::os::raw::c_void,
            buffer: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASpoint_copy_from(
            self_: *mut ::std::os::raw::c_void,
            buffer: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASpoint_init(
            self_: *mut ::std::os::raw::c_void,
            quantizer: *const ::std::os::raw::c_void,
            point_type: ::std::os::raw::c_uchar,
            point_size: ::std::os::raw::c_ushort,
            attributer: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_init_1(
            self_: *mut ::std::os::raw::c_void,
            quantizer: *const ::std::os::raw::c_void,
            num_items: ::std::os::raw::c_uint,
            items: *const ::std::os::raw::c_void,
            attributer: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_inside_rectangle(
            self_: *mut ::std::os::raw::c_void,
            r_min_x: f64,
            r_min_y: f64,
            r_max_x: f64,
            r_max_y: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_inside_tile(
            self_: *mut ::std::os::raw::c_void,
            ll_x: f32,
            ll_y: f32,
            ur_x: f32,
            ur_y: f32,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_inside_circle(
            self_: *mut ::std::os::raw::c_void,
            center_x: f64,
            center_y: f64,
            squared_radius: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_inside_box(
            self_: *mut ::std::os::raw::c_void,
            min_x: f64,
            min_y: f64,
            min_z: f64,
            max_x: f64,
            max_y: f64,
            max_z: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_inside_bounding_box(
            self_: *mut ::std::os::raw::c_void,
            min_x: f64,
            min_y: f64,
            min_z: f64,
            max_x: f64,
            max_y: f64,
            max_z: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_zero(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_zero(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASpoint_clean(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASpoint_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_is_first(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_intermediate(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_last(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_single(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_first_of_many(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_last_of_many(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_get_X(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_get_Y(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_get_Z(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASpoint_get_intensity(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_return_number(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_number_of_returns(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_scan_direction_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_edge_of_flight_line(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_classification(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_synthetic_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_keypoint_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_withheld_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_scan_angle_rank(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_char;
    }
    extern "C" {
        pub fn LASpoint_get_user_data(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_point_source_ID(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_deleted_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_gps_time(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASpoint_get_RGB(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_get_RGBI(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_get_RGBI_1(
            self_: *mut ::std::os::raw::c_void,
            band: ::std::os::raw::c_uint,
        ) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_R(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_G(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_B(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_I(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_get_NIR(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASpoint_set_X(self_: *mut ::std::os::raw::c_void, X: ::std::os::raw::c_int);
    }
    extern "C" {
        pub fn LASpoint_set_Y(self_: *mut ::std::os::raw::c_void, Y: ::std::os::raw::c_int);
    }
    extern "C" {
        pub fn LASpoint_set_Z(self_: *mut ::std::os::raw::c_void, Z: ::std::os::raw::c_int);
    }
    extern "C" {
        pub fn LASpoint_set_intensity(
            self_: *mut ::std::os::raw::c_void,
            intensity: ::std::os::raw::c_ushort,
        );
    }
    extern "C" {
        pub fn LASpoint_set_return_number(
            self_: *mut ::std::os::raw::c_void,
            return_number: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_number_of_returns(
            self_: *mut ::std::os::raw::c_void,
            number_of_returns: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_scan_direction_flag(
            self_: *mut ::std::os::raw::c_void,
            scan_direction_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_edge_of_flight_line(
            self_: *mut ::std::os::raw::c_void,
            edge_of_flight_line: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_classification(
            self_: *mut ::std::os::raw::c_void,
            classification: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_synthetic_flag(
            self_: *mut ::std::os::raw::c_void,
            synthetic_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_keypoint_flag(
            self_: *mut ::std::os::raw::c_void,
            keypoint_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_withheld_flag(
            self_: *mut ::std::os::raw::c_void,
            withheld_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_scan_angle_rank(
            self_: *mut ::std::os::raw::c_void,
            scan_angle_rank: ::std::os::raw::c_char,
        );
    }
    extern "C" {
        pub fn LASpoint_set_user_data(
            self_: *mut ::std::os::raw::c_void,
            user_data: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_point_source_ID(
            self_: *mut ::std::os::raw::c_void,
            point_source_ID: ::std::os::raw::c_ushort,
        );
    }
    extern "C" {
        pub fn LASpoint_set_deleted_flag(
            self_: *mut ::std::os::raw::c_void,
            deleted_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_gps_time(self_: *mut ::std::os::raw::c_void, gps_time: f64);
    }
    extern "C" {
        pub fn LASpoint_set_RGB(
            self_: *mut ::std::os::raw::c_void,
            rgb: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASpoint_set_RGBI(
            self_: *mut ::std::os::raw::c_void,
            rgb: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASpoint_set_RGBI_1(
            self_: *mut ::std::os::raw::c_void,
            band: ::std::os::raw::c_uint,
            value: ::std::os::raw::c_ushort,
        );
    }
    extern "C" {
        pub fn LASpoint_set_R(self_: *mut ::std::os::raw::c_void, R: ::std::os::raw::c_ushort);
    }
    extern "C" {
        pub fn LASpoint_set_G(self_: *mut ::std::os::raw::c_void, G: ::std::os::raw::c_ushort);
    }
    extern "C" {
        pub fn LASpoint_set_B(self_: *mut ::std::os::raw::c_void, B: ::std::os::raw::c_ushort);
    }
    extern "C" {
        pub fn LASpoint_set_I(self_: *mut ::std::os::raw::c_void, I: ::std::os::raw::c_ushort);
    }
    extern "C" {
        pub fn LASpoint_set_NIR(self_: *mut ::std::os::raw::c_void, NIR: ::std::os::raw::c_ushort);
    }
    extern "C" {
        pub fn LASpoint_get_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASpoint_get_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASpoint_get_z(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASpoint_set_x(self_: *mut ::std::os::raw::c_void, x: f64) -> bool;
    }
    extern "C" {
        pub fn LASpoint_set_y(self_: *mut ::std::os::raw::c_void, y: f64) -> bool;
    }
    extern "C" {
        pub fn LASpoint_set_z(self_: *mut ::std::os::raw::c_void, z: f64) -> bool;
    }
    extern "C" {
        pub fn LASpoint_is_extended_point_type(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_get_extended_classification(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_extended_return_number(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_extended_number_of_returns(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_extended_scan_angle(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_short;
    }
    extern "C" {
        pub fn LASpoint_get_extended_overlap_flag(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_get_extended_scanner_channel(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASpoint_set_extended_classification(
            self_: *mut ::std::os::raw::c_void,
            extended_classification: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_extended_return_number(
            self_: *mut ::std::os::raw::c_void,
            extended_return_number: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_extended_number_of_returns(
            self_: *mut ::std::os::raw::c_void,
            extended_number_of_returns: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_extended_scan_angle(
            self_: *mut ::std::os::raw::c_void,
            extended_scan_angle: ::std::os::raw::c_short,
        );
    }
    extern "C" {
        pub fn LASpoint_set_extended_overlap_flag(
            self_: *mut ::std::os::raw::c_void,
            extended_overlap_flag: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_extended_scanner_channel(
            self_: *mut ::std::os::raw::c_void,
            extended_scanner_channel: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_get_scan_angle(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASpoint_get_abs_scan_angle(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASpoint_set_scan_angle(self_: *mut ::std::os::raw::c_void, scan_angle: f32);
    }
    extern "C" {
        pub fn LASpoint_compute_coordinates(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASpoint_compute_XYZ(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASpoint_compute_XYZ_1(
            self_: *mut ::std::os::raw::c_void,
            quantizer: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_has_attribute(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_get_attribute(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
            data: *mut ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_set_attribute(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
            data: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASpoint_get_attribute_name(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASpoint_get_attribute_as_float(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> f64;
    }
    extern "C" {
        pub fn LASpoint_set_attribute_as_float(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
            value: f64,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_1(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_2(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_char,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_3(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_ushort,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_4(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_short,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_5(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_6(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_int,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_7(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_ulonglong,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_8(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: ::std::os::raw::c_longlong,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_9(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: f32,
        );
    }
    extern "C" {
        pub fn LASpoint_set_attribute_10(
            self_: *mut ::std::os::raw::c_void,
            start: ::std::os::raw::c_int,
            data: f64,
        );
    }
    extern "C" {
        pub fn LASpoint_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASvlr_field_reserved(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_field_user_id(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_field_record_id(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_field_record_length_after_header(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_field_description(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_field_data(self_: *mut ::std::os::raw::c_void)
            -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASevlr_field_reserved(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASevlr_field_user_id(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASevlr_field_record_id(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASevlr_field_record_length_after_header(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASevlr_field_description(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASevlr_field_data(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASevlr_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_geo_keys_field_key_directory_version(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_geo_keys_field_key_revision(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_geo_keys_field_minor_revision(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_geo_keys_field_number_of_keys(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_key_entry_field_key_id(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_key_entry_field_tiff_tag_location(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_key_entry_field_count(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_key_entry_field_value_offset(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASvlr_classification_field_class_number(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASvlr_classification_field_description(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_clean(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getBitsPerSample(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getCompressionType(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getNumberOfSamples(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getTemporalSpacing(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getDigitizerGain(self_: *mut ::std::os::raw::c_void)
            -> f64;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_getDigitizerOffset(
            self_: *mut ::std::os::raw::c_void,
        ) -> f64;
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setBitsPerSample(
            self_: *mut ::std::os::raw::c_void,
            bps: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setCompressionType(
            self_: *mut ::std::os::raw::c_void,
            compression: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setNumberOfSamples(
            self_: *mut ::std::os::raw::c_void,
            samples: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setTemporalSpacing(
            self_: *mut ::std::os::raw::c_void,
            spacing: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setDigitizerGain(
            self_: *mut ::std::os::raw::c_void,
            gain: f64,
        );
    }
    extern "C" {
        pub fn LASvlr_wave_packet_descr_setDigitizerOffset(
            self_: *mut ::std::os::raw::c_void,
            offset: f64,
        );
    }
    extern "C" {
        pub fn LASheader_field_file_signature(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_file_source_ID(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_global_encoding(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_project_ID_GUID_data_1(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_project_ID_GUID_data_2(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_project_ID_GUID_data_3(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_project_ID_GUID_data_4(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_version_major(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASheader_field_version_minor(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASheader_field_system_identifier(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_generating_software(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_file_creation_day(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_file_creation_year(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_header_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_offset_to_point_data(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_number_of_variable_length_records(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_point_data_format(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uchar;
    }
    extern "C" {
        pub fn LASheader_field_point_data_record_length(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ushort;
    }
    extern "C" {
        pub fn LASheader_field_number_of_point_records(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_number_of_points_by_return(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_max_x(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_min_x(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_max_y(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_min_y(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_max_z(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_min_z(self_: *mut ::std::os::raw::c_void) -> *mut f64;
    }
    extern "C" {
        pub fn LASheader_field_start_of_waveform_data_packet_record(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ulonglong;
    }
    extern "C" {
        pub fn LASheader_field_start_of_first_extended_variable_length_record(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ulonglong;
    }
    extern "C" {
        pub fn LASheader_field_number_of_extended_variable_length_records(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_extended_number_of_point_records(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_ulonglong;
    }
    extern "C" {
        pub fn LASheader_field_extended_number_of_points_by_return(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_user_data_in_header_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_user_data_in_header(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlrs(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_evlrs(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_keys(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_key_entries(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_double_params(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_ascii_params(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_ogc_wkt_math(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_geo_ogc_wkt(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_classification(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_wave_packet_descr(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_laszip(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_lastiling(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_vlr_lasoriginal(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_field_user_data_after_header_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASheader_field_user_data_after_header(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_set_bounding_box(
            self_: *mut ::std::os::raw::c_void,
            min_x: f64,
            min_y: f64,
            min_z: f64,
            max_x: f64,
            max_y: f64,
            max_z: f64,
            auto_scale: bool,
            auto_offset: bool,
        );
    }
    extern "C" {
        pub fn LASheader_set_global_encoding_bit(
            self_: *mut ::std::os::raw::c_void,
            bit: ::std::os::raw::c_int,
        );
    }
    extern "C" {
        pub fn LASheader_unset_global_encoding_bit(
            self_: *mut ::std::os::raw::c_void,
            bit: ::std::os::raw::c_int,
        );
    }
    extern "C" {
        pub fn LASheader_get_global_encoding_bit(
            self_: *mut ::std::os::raw::c_void,
            bit: ::std::os::raw::c_int,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_clean_las_header(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_user_data_in_header(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_vlrs(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_evlrs(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_laszip(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_lastiling(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_lasoriginal(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean_user_data_after_header(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_clean(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_unlink(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_check(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASheader_is_compressed(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASheader_is_lonlat(self_: *mut ::std::os::raw::c_void, extend: f32) -> bool;
    }
    extern "C" {
        pub fn LASheader_add_vlr(
            self_: *mut ::std::os::raw::c_void,
            user_id: *const ::std::os::raw::c_void,
            record_id: ::std::os::raw::c_ushort,
            record_length_after_header: ::std::os::raw::c_ushort,
            data: *mut ::std::os::raw::c_void,
            keep_description: bool,
            description: *const ::std::os::raw::c_void,
            keep_existing: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_get_vlr(
            self_: *mut ::std::os::raw::c_void,
            user_id: *const ::std::os::raw::c_void,
            record_id: ::std::os::raw::c_ushort,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASheader_remove_vlr(
            self_: *mut ::std::os::raw::c_void,
            i: ::std::os::raw::c_uint,
            delete_data: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_remove_vlr_1(
            self_: *mut ::std::os::raw::c_void,
            user_id: *const ::std::os::raw::c_void,
            record_id: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_add_evlr(
            self_: *mut ::std::os::raw::c_void,
            user_id: *const ::std::os::raw::c_void,
            record_id: ::std::os::raw::c_ushort,
            record_length_after_header: ::std::os::raw::c_longlong,
            data: *mut ::std::os::raw::c_void,
            keep_description: bool,
            description: *const ::std::os::raw::c_void,
            keep_existing: bool,
        );
    }
    extern "C" {
        pub fn LASheader_remove_evlr(
            self_: *mut ::std::os::raw::c_void,
            i: ::std::os::raw::c_uint,
            delete_data: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_remove_evlr_1(
            self_: *mut ::std::os::raw::c_void,
            user_id: *const ::std::os::raw::c_void,
            record_id: ::std::os::raw::c_ushort,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_set_lastiling(
            self_: *mut ::std::os::raw::c_void,
            level: ::std::os::raw::c_uint,
            level_index: ::std::os::raw::c_uint,
            implicit_levels: ::std::os::raw::c_uint,
            buffer: bool,
            reversible: bool,
            min_x: f32,
            max_x: f32,
            min_y: f32,
            max_y: f32,
        );
    }
    extern "C" {
        pub fn LASheader_set_lasoriginal(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_restore_lasoriginal(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASheader_set_geo_keys(
            self_: *mut ::std::os::raw::c_void,
            number_of_keys: ::std::os::raw::c_int,
            geo_keys: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_set_geo_double_params(
            self_: *mut ::std::os::raw::c_void,
            num_geo_double_params: ::std::os::raw::c_int,
            geo_double_params: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_del_geo_double_params(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_set_geo_ascii_params(
            self_: *mut ::std::os::raw::c_void,
            num_geo_ascii_params: ::std::os::raw::c_int,
            geo_ascii_params: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_del_geo_ascii_params(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_set_geo_wkt_ogc_math(
            self_: *mut ::std::os::raw::c_void,
            num_geo_wkt_ogc_math: ::std::os::raw::c_int,
            geo_wkt_ogc_math: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASheader_del_geo_wkt_ogc_math(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_set_geo_ogc_wkt(
            self_: *mut ::std::os::raw::c_void,
            num_geo_ogc_wkt: ::std::os::raw::c_int,
            geo_ogc_wkt: *const ::std::os::raw::c_void,
            in_evlr: bool,
        );
    }
    extern "C" {
        pub fn LASheader_del_geo_ogc_wkt(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASheader_update_extra_bytes_vlr(
            self_: *mut ::std::os::raw::c_void,
            keep_description: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASheader_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASignore_usage(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASignore_ignore_class(
            self_: *mut ::std::os::raw::c_void,
            classification: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASignore_dont_ignore_class(
            self_: *mut ::std::os::raw::c_void,
            classification: ::std::os::raw::c_uchar,
        );
    }
    extern "C" {
        pub fn LASignore_unparse(
            self_: *mut ::std::os::raw::c_void,
            string: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASignore_parse_1(
            self_: *mut ::std::os::raw::c_void,
            curr_parameter: ::std::os::raw::c_uint,
            num_parameters: ::std::os::raw::c_uint,
            parameters: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASignore_get_decompress_selective(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASignore_ignore(
            self_: *mut ::std::os::raw::c_void,
            point: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASignore_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASignore_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreader_field_header(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_field_point(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_field_npoints(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASreader_field_p_count(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASreader_has_layers(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreader_set_index(
            self_: *mut ::std::os::raw::c_void,
            index: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreader_get_index(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_set_filter(
            self_: *mut ::std::os::raw::c_void,
            filter: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreader_get_filter(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_set_transform(
            self_: *mut ::std::os::raw::c_void,
            transform: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreader_get_transform(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_set_ignore(
            self_: *mut ::std::os::raw::c_void,
            ignore: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreader_get_ignore(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreader_get_inside(self_: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASreader_inside_none(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreader_inside_tile(
            self_: *mut ::std::os::raw::c_void,
            ll_x: f32,
            ll_y: f32,
            size: f32,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreader_get_t_ll_x(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASreader_get_t_ll_y(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASreader_get_t_size(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASreader_inside_circle(
            self_: *mut ::std::os::raw::c_void,
            center_x: f64,
            center_y: f64,
            radius: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreader_get_c_center_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_c_center_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_c_radius(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_inside_rectangle(
            self_: *mut ::std::os::raw::c_void,
            min_x: f64,
            min_y: f64,
            max_x: f64,
            max_y: f64,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreader_get_r_min_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_r_min_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_r_max_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_r_max_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_read_point(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreader_ignore_point(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreader_compute_coordinates(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreader_get_min_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_min_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_min_z(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_max_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_max_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_max_z(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_x(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_y(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_z(self_: *mut ::std::os::raw::c_void) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_x_1(
            self_: *mut ::std::os::raw::c_void,
            x: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_y_1(
            self_: *mut ::std::os::raw::c_void,
            y: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_z_1(
            self_: *mut ::std::os::raw::c_void,
            z: ::std::os::raw::c_int,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreader_get_X(
            self_: *mut ::std::os::raw::c_void,
            x: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASreader_get_Y(
            self_: *mut ::std::os::raw::c_void,
            y: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASreader_get_Z(
            self_: *mut ::std::os::raw::c_void,
            z: f64,
        ) -> ::std::os::raw::c_longlong;
    }
    extern "C" {
        pub fn LASreader_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreader_dealloc(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASwaveform13reader_field_nbits(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_nsamples(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_temporal(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_location(self_: *mut ::std::os::raw::c_void) -> *mut f32;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_XYZt(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_XYZreturn(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_XYZsample(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_s_count(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_sample(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_sampleMin(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_sampleMax(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASwaveform13reader_field_samples(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwaveform13reader_open(
            self_: *mut ::std::os::raw::c_void,
            file_name: *const ::std::os::raw::c_void,
            start_of_waveform_data_packet_record: ::std::os::raw::c_longlong,
            wave_packet_descr: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_is_compressed(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_read_waveform(
            self_: *mut ::std::os::raw::c_void,
            point: *const ::std::os::raw::c_void,
        ) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_get_samples(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_has_samples(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_get_samples_xyz(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_has_samples_xyz(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASwaveform13reader_close(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASwaveform13reader_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASwaveform13reader_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreadOpener_set_io_ibuffer_size(
            self_: *mut ::std::os::raw::c_void,
            buffer_size: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_io_ibuffer_size(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_number(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_current(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_uint;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_only(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_extension_only(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_1(
            self_: *mut ::std::os::raw::c_void,
            number: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_only_1(
            self_: *mut ::std::os::raw::c_void,
            number: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_extension_only_1(
            self_: *mut ::std::os::raw::c_void,
            number: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_base(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_name_base_1(
            self_: *mut ::std::os::raw::c_void,
            number: ::std::os::raw::c_uint,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_set_file_name(
            self_: *mut ::std::os::raw::c_void,
            file_name: *const ::std::os::raw::c_void,
            unique: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_add_file_name(
            self_: *mut ::std::os::raw::c_void,
            file_name: *const ::std::os::raw::c_void,
            unique: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_add_list_of_files(
            self_: *mut ::std::os::raw::c_void,
            list_of_files: *const ::std::os::raw::c_void,
            unique: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_delete_file_name(
            self_: *mut ::std::os::raw::c_void,
            file_name_id: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_file_name_current(
            self_: *mut ::std::os::raw::c_void,
            file_name_id: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_get_file_format(
            self_: *mut ::std::os::raw::c_void,
            number: ::std::os::raw::c_uint,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_set_merged(self_: *mut ::std::os::raw::c_void, merged: bool);
    }
    extern "C" {
        pub fn LASreadOpener_is_merged(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_stored(self_: *mut ::std::os::raw::c_void, stored: bool);
    }
    extern "C" {
        pub fn LASreadOpener_is_stored(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_buffer_size(self_: *mut ::std::os::raw::c_void, buffer_size: f32);
    }
    extern "C" {
        pub fn LASreadOpener_get_buffer_size(self_: *mut ::std::os::raw::c_void) -> f32;
    }
    extern "C" {
        pub fn LASreadOpener_set_neighbor_file_name(
            self_: *mut ::std::os::raw::c_void,
            neighbor_file_name: *const ::std::os::raw::c_void,
            unique: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_add_neighbor_file_name(
            self_: *mut ::std::os::raw::c_void,
            neighbor_file_name: *const ::std::os::raw::c_void,
            unique: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_add_neighbor_file_name_1(
            self_: *mut ::std::os::raw::c_void,
            file_name: *const ::std::os::raw::c_void,
            npoints: ::std::os::raw::c_longlong,
            min_x: f64,
            min_y: f64,
            max_x: f64,
            max_y: f64,
            unique: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_add_neighbor_list_of_files(
            self_: *mut ::std::os::raw::c_void,
            list_of_files: *const ::std::os::raw::c_void,
            unique: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_auto_reoffset(
            self_: *mut ::std::os::raw::c_void,
            auto_reoffset: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_is_auto_reoffset(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_files_are_flightlines(
            self_: *mut ::std::os::raw::c_void,
            files_are_flightlines: ::std::os::raw::c_int,
        );
    }
    extern "C" {
        pub fn LASreadOpener_are_files_flightlines(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_set_files_are_flightlines_index(
            self_: *mut ::std::os::raw::c_void,
            files_are_flightlines_index: ::std::os::raw::c_int,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_files_flight_index(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_set_apply_file_source_ID(
            self_: *mut ::std::os::raw::c_void,
            apply_file_source_ID: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_applying_file_source_ID(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_scale_factor(
            self_: *mut ::std::os::raw::c_void,
            scale_factor: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_scale_factor(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_set_offset(
            self_: *mut ::std::os::raw::c_void,
            offset: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_offset(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_set_translate_intensity(
            self_: *mut ::std::os::raw::c_void,
            translation: f32,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_scale_intensity(self_: *mut ::std::os::raw::c_void, scale: f32);
    }
    extern "C" {
        pub fn LASreadOpener_set_translate_scan_angle(
            self_: *mut ::std::os::raw::c_void,
            translate_scan_angle: f32,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_scale_scan_angle(
            self_: *mut ::std::os::raw::c_void,
            scale_scan_angle: f32,
        );
    }
    extern "C" {
        pub fn LASreadOpener_add_attribute(
            self_: *mut ::std::os::raw::c_void,
            data_type: ::std::os::raw::c_int,
            name: *const ::std::os::raw::c_void,
            description: *const ::std::os::raw::c_void,
            scale: f64,
            offset: f64,
            pre_scale: f64,
            pre_offset: f64,
            no_data: f64,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_point_type(
            self_: *mut ::std::os::raw::c_void,
            point_type: ::std::os::raw::c_uchar,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_set_parse_string(
            self_: *mut ::std::os::raw::c_void,
            parse_string: *const ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_skip_lines(
            self_: *mut ::std::os::raw::c_void,
            number_of_lines: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_populate_header(
            self_: *mut ::std::os::raw::c_void,
            populate_header: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_keep_lastiling(
            self_: *mut ::std::os::raw::c_void,
            keep_lastiling: bool,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_pipe_on(self_: *mut ::std::os::raw::c_void, pipe_on: bool);
    }
    extern "C" {
        pub fn LASreadOpener_get_parse_string(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_usage(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreadOpener_set_decompress_selective(
            self_: *mut ::std::os::raw::c_void,
            decompress_selective: ::std::os::raw::c_uint,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_inside_tile(
            self_: *mut ::std::os::raw::c_void,
            ll_x: f32,
            ll_y: f32,
            size: f32,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_inside_circle(
            self_: *mut ::std::os::raw::c_void,
            center_x: f64,
            center_y: f64,
            radius: f64,
        );
    }
    extern "C" {
        pub fn LASreadOpener_set_inside_rectangle(
            self_: *mut ::std::os::raw::c_void,
            min_x: f64,
            min_y: f64,
            max_x: f64,
            max_y: f64,
        );
    }
    extern "C" {
        pub fn LASreadOpener_parse(
            self_: *mut ::std::os::raw::c_void,
            argc: ::std::os::raw::c_int,
            argv: *mut ::std::os::raw::c_void,
            parse_ignore: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_is_piped(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_is_buffered(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_is_header_populated(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_active(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_is_inside(self_: *mut ::std::os::raw::c_void) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_unparse(
            self_: *mut ::std::os::raw::c_void,
            string: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_set_filter(
            self_: *mut ::std::os::raw::c_void,
            filter: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_filter(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_set_transform(
            self_: *mut ::std::os::raw::c_void,
            transform: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_transform(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_set_ignore(
            self_: *mut ::std::os::raw::c_void,
            ignore: *mut ::std::os::raw::c_void,
        );
    }
    extern "C" {
        pub fn LASreadOpener_get_ignore(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_reset(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreadOpener_get_temp_file_base(
            self_: *mut ::std::os::raw::c_void,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_open(
            self_: *mut ::std::os::raw::c_void,
            other_file_name: *const ::std::os::raw::c_void,
            reset_after_other: bool,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_reopen(
            self_: *mut ::std::os::raw::c_void,
            lasreader: *mut ::std::os::raw::c_void,
            remain_buffered: bool,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreadOpener_open_waveform13(
            self_: *mut ::std::os::raw::c_void,
            lasheader: *const ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_number_attributes(
            self_: *mut ::std::os::raw::c_void,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_data_type(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_name(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_description(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> *const ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_scale(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_offset(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreadOpener_get_attribute_no_data(
            self_: *mut ::std::os::raw::c_void,
            index: ::std::os::raw::c_uint,
        ) -> f64;
    }
    extern "C" {
        pub fn LASreadOpener_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreadOpener_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreaderLAS_set_delete_stream(
            self_: *mut ::std::os::raw::c_void,
            delete_stream: bool,
        );
    }
    extern "C" {
        pub fn LASreaderLAS_open(
            self_: *mut ::std::os::raw::c_void,
            file_name: *const ::std::os::raw::c_void,
            io_buffer_size: ::std::os::raw::c_int,
            peek_only: bool,
            decompress_selective: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreaderLAS_open_1(
            self_: *mut ::std::os::raw::c_void,
            file: *mut ::std::os::raw::c_void,
            peek_only: bool,
            decompress_selective: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreaderLAS_open_3(
            self_: *mut ::std::os::raw::c_void,
            stream: *mut ::std::os::raw::c_void,
            peek_only: bool,
            decompress_selective: ::std::os::raw::c_uint,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreaderLAS_get_format(self_: *mut ::std::os::raw::c_void)
            -> ::std::os::raw::c_int;
    }
    extern "C" {
        pub fn LASreaderLAS_seek(
            self_: *mut ::std::os::raw::c_void,
            p_index: ::std::os::raw::c_longlong,
        ) -> bool;
    }
    extern "C" {
        pub fn LASreaderLAS_get_stream(
            self_: *mut ::std::os::raw::c_void,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLAS_close(self_: *mut ::std::os::raw::c_void, close_stream: bool);
    }
    extern "C" {
        pub fn LASreaderLAS_create() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLAS_destroy(self_: *mut ::std::os::raw::c_void);
    }
    extern "C" {
        pub fn LASreaderLASrescale_create(
            x_scale_factor: f64,
            y_scale_factor: f64,
            z_scale_factor: f64,
            check_for_overflow: bool,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLASreoffset_create(
            x_offset: f64,
            y_offset: f64,
            z_offset: f64,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLASreoffset_create_1() -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLASrescalereoffset_create(
            x_scale_factor: f64,
            y_scale_factor: f64,
            z_scale_factor: f64,
            x_offset: f64,
            y_offset: f64,
            z_offset: f64,
        ) -> *mut ::std::os::raw::c_void;
    }
    extern "C" {
        pub fn LASreaderLASrescalereoffset_create_1(
            x_scale_factor: f64,
            y_scale_factor: f64,
            z_scale_factor: f64,
        ) -> *mut ::std::os::raw::c_void;
    }
}
